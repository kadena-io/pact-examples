; --------------------------------------------------------------------------
; --------------------------------------------------------------------------
; Example of using module governance capability


; --------------------------------------------------------------------------
; Install account schema module
; --------------------------------------------------------------------------
(begin-tx)
(env-data { "admin-keyset": ["product-dept" "dev-dept"] })
(module acct-module ACCT-GOVERNANCE
  @doc "account schema module"

  ;;; module can only be upgraded if admin-keyset is satisfied.
  ;;; i.e. If transaction signed by both "product-dept" and "dev-dept"
  (defun enforce-acct-admin ()
    (enforce-guard (read-keyset "admin-keyset"))
  )

  (defcap ACCT-GOVERNANCE ()
    (enforce-acct-admin)
  )

  (defschema account
    balance:integer
    ks:keyset))
(commit-tx)

; --------------------------------------------------------------------------
; Upgrades schema by triggering module's governance capability.
; --------------------------------------------------------------------------
(begin-tx)
;;; simulate multi-signature of product and dev department
(env-keys ["product-dept" "dev-dept"])

(module acct-module ACCT-GOVERNANCE
  @doc "account schema module with 'active' column"

  (defcap ACCT-GOVERNANCE ()
    (enforce-guard (read-keyset "admin-keyset")))

  (defschema account
    balance:integer
    ks:keyset
    active:bool ;;; new column
  ))
(commit-tx)

; --------------------------------------------------------------------------
; Install hello-coin module
; --------------------------------------------------------------------------
(begin-tx)

(module hello-coin HELLO-GOVERNANCE
  @doc "Implementaion of hello-coin"

  (use acct-module)

  (defcap HELLO-GOVERNANCE ()
    true
  )

  (deftable accounts:{account})

  (defun transfer (from:string to:string amount:integer)
    (with-read accounts from { 'balance := from-bal, 'ks := from-ks }
      (with-read accounts to { 'balance := to-bal }
        (update accounts from { "balance": (- from-bal amount) })
        (update accounts to   { "balance": (+ to-bal amount) }))))
)
(commit-tx)
